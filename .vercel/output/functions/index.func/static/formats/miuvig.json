{
	"miuvig": {
		"meta": {
			"version": 0.1
		},
		"genome": {
			"metadata": {
				"source-of-uvigs": {
					"value":					"viral fraction metagenome (virome)",
					"required":				true,
					"type": 					"string", 
					"options": [
														"metagenome (not viral targeted)",
														"viral fraction metagenome (virome)",
														"sequence-targeted metagenome",
														"metatranscriptome (not viral targeted)",
														"viral fraction RNA metagenome (RNA virome)",
														"sequence-targeted RNA metagenome",
														"microbial single amplified genome (SAG)",
														"viral single amplified genome (vSAG) ",
														"isolate microbial genome",
														"other"
					],
					"info": {
						"requirement": 	"Mandatory",
						"description":	"Type of dataset from which the UViG was obtained",
						"syntax":				"[ metagenome (not viral targeted) | viral fraction metagenome (virome) | sequence-targeted metagenome | metatranscriptome (not viral targeted) | viral fraction RNA metagenome (RNA virome) | sequence-targeted RNA metagenome | microbial single amplified genome (SAG) | viral single amplified genome (vSAG) | isolate microbial genome | other ]",
						"example": 			"viral fraction metagenome (virome)",
						"specificity":	"New and specific to UViGs"
					}
				},

				"assembly-software": {
					"value":					"[ 'metaSPAdes; 3.11.0; kmer set 21,33,55,77,99,121, default parameters otherwise' ]",
					"required":				true,
					"type": 					"array", 
					"regex": 					"/([^;]+)/g",
					"info": {
						"requirement": 	"Mandatory",
						"description":	"Tool(s) used for assembly and/or binning, including version number and parameters",
						"syntax":				"[ {software};{version};{parameters}, ... ]",
						"example": 			"metaSPAdes; 3.11.0; kmer set 21,33,55,77,99,121, default parameters otherwise",
						"specificity":	"Identical MIMAG / MISAG"
					}
				},

				"viral-identification-software": {
					"value":					"[ 'VirSorter; 1.0.4; Virome database, category 2' ]",
					"required":				true,
					"type": 					"array",
					"regex": 					"/([^;]+)/g",
					"info": {
						"requirement": 	"Mandatory",
						"description":	"Tool(s) used for the identification of UViG as a viral genome, software or protocol name  including version number, parameters, and cutoffs used (see Table S2)",
						"syntax":				"[ {software};{version};{parameters}, ... ]",
						"example": 			"VirSorter; 1.0.4; Virome database, category 2",
						"specificity":	"New and specific to UViGs"
					}
				},

				"predicted-genome-type": {
					"value":					"dsDNA",
					"required":				true,
					"type": 					"string", 
					"options": [
														"DNA",
														"dsDNA",
														"ssDNA",
														"RNA",
														"dsRNA",
														"ssRNA",
														"ssRNA (+)",
														"ssRNA (-)",
														"mixed",
														"uncharacterized"
					],
					"info": {
						"requirement": 	"Mandatory",
						"description":	"Type of genome predicted for the UViG",
						"syntax":				"[ DNA | dsDNA | ssDNA | RNA | dsRNA | ssRNA | ssRNA (+) | ssRNA (-) | mixed | uncharacterized ]",
						"example": 			"dsDNA",
						"specificity":	"New and specific to UViGs"
					}
				},

				"predicted-genome-structure": {
					"value":					"non-segmented",
					"required":				true,
					"type": 					"string", 
					"options": [
														"segmented",
														"non-segmented",
														"undetermined"
					],
					"info": {
						"requirement": 	"Mandatory",
						"description":	"Expected structure of the viral genome",
						"syntax":				"[ segmented | non-segmented | undetermined ]",
						"example": 			"non-segmented",
						"specificity":	"New and specific to UViGs"
					}
				},

				"detection-type": {
					"value":					"independent sequence (UViG)",
					"required":				true,
					"type": 					"string", 
					"options": [
														"independent sequence (UViG)",
														"provirus (UpViG)"
					],
					"info": {
						"requirement": 	"Mandatory",
						"description":	"Type of UViG detection",
						"syntax":				"[ independent sequence (UViG) | provirus (UpViG) ]",
						"example": 			"independent sequence (UViG)",
						"specificity":	"New and specific to UViGs"
					}
				}
			},

			"quality": {
				"assembly-quality": {
					"value":					"High-quality draft genome",
					"required":				true,
					"type": 					"string", 
					"options": [
														"Finished genome",
														"High-quality draft genome",
														"Genome fragment(s)"
					],
					"info": {
						"requirement": 	"Mandatory",
						"description":	"The assembly quality categories, specific for virus genomes, are based on sets of criteria as follows. Finished: Single, validated, contiguous sequence per replicon without gaps or ambiguities, with extensive manual review and editing to annotate putative gene functions and transcriptional units. High-quality draft genome: One or multiple fragments, totaling ≥ 90% of the expected genome or replicon sequence or predicted complete. Genome fragment(s): One or multiple fragments, totalling < 90% of the expected genome or replicon sequence, or for which no genome size could be estimated.",
						"syntax":				"[ Finished genome | High-quality draft genome | Genome fragment(s) ]",
						"example": 			"High-quality draft genome",
						"specificity":	"Comparable to and adapted from MIMAG / MISAG"
					}
				},
				"number-of-contigs": {
					"value":					"1",
					"required":				true,
					"type": 					"number",
					"info": {
						"requirement": 	"Mandatory",
						"description":	"Total number of contigs composing the UViG",
						"syntax":				"{number}",
						"example": 			"1",
						"specificity":	"Identical MIMAG / MISAG"
					}
				},
				"completeness-score": {
					"value":					"high;92%",
					"required":				"conditional",
					"conditional": {
						"genome": {
							"assembly-quality": ["Finished genome", "High-quality draft genome"]
						}
					},
					"type": 					"string",
					"regex": 					"/([^;]+)/g",
					"info": {
						"requirement": 	"Conditional (required for finished genomes and high-quality draft genomes, optional for other categories)",
						"description":	"Estimated completeness of the UViG",
						"syntax":				"{quality};{percentage}",
						"example": 			"high;92%",
						"specificity":	"Comparable to and adapted from MIMAG / MISAG"
					}
				},
				"completeness-approach": {
					"value":					"UViG length compared to the average length of reference genomes from the P22virus genus (NCBI RefSeq v83)",
					"required":				"conditional",
					"conditional": {
						"genome": {
							"completeness-score": true
						}
					},
					"type": 					"string",
					"info": {
						"requirement": 	"Conditional (required if a completeness estimation is provided)",
						"description":	"Approach used to estimate the UViG completeness, including reference genome or group used, and contig feature suggesting a complete genome",
						"syntax":				"{text}",
						"example": 			"UViG length compared to the average length of reference genomes from the P22virus genus (NCBI RefSeq v83)",
						"specificity":	"Comparable to and adapted from MIMAG / MISAG"
					}
				}
			},

			"annotation": {
				"feature-prediction": {
					"value":					"Prodigal; 2.6.3; default parameters",
					"required":				"conditional",
					"conditional": 	{
						"genome": {
							"completeness-score": true
						}
					},
					"type": 					"string",
					"regex": 					"/([^;]+)/g",
					"info": {
						"requirement": 	"Conditional (required if genome annotation is provided)",
						"description":	"Method used to predict UViGs features such as ORFs, integration site, etc.",
						"syntax":				"{software};{version};{parameters}",
						"example": 			"Prodigal; 2.6.3; default parameters",
						"specificity":	"Comparable to and adapted from MIMAG / MISAG"
					}
				},
				"has-orf-annotation": {
					"value":					true,
					"type": 					"boolean",
					"required":				true,
					"info": {
						"description": 	"JSON-specific requirement to indicate whether an ORF annotation is provided"
					}
				},
				"has-votu-classification": {
					"value":					true,
					"type": 					"boolean",
					"required":				true,
					"info": {
						"description": 	"JSON-specific requirement to indicate whether a vOTU classification is"
					}
				},
				"has-predicted-host": {
					"value":					true,
					"type": 					"boolean",
					"required":				true,
					"info": {
						"description": 	"JSON-specific requirement to indicate whether a vOTU classification is"
					}
				},
				"reference-databases": {
					"value":					"[ 'Prodigal; 2.6.3; default parameters' ]",
					"required":				"conditional",
					"conditional": 	{
						"annotation": {
							"has-orf-annotation": true
						}
					},
					"type": 					"array",
					"regex": 					"/([^;]+)/g",
					"info": {
						"requirement": 	"Conditional (required if a viral-specific ORF annotation is provided)",
						"description":	"List of database(s) used for ORF annotation, along with version number and reference to website or publication",
						"syntax":				"{database};{version};{reference}",
						"example": 			"pVOGs; 5; http://dmk-brain.ecn.uiowa.edu/pVOGs/ Grazziotin et al. 2017 doi:10.1093/nar/gkw975",
						"specificity":	"Comparable to and adapted from MIMAG / MISAG"
					}
				},
				"similarity-search-method": {
					"value":					"HMMER3; 3.1b2; hmmsearch, cutoff of 50 on score",
					"required":				"conditional",
					"conditional": 	{
						"annotation": {
							"reference-databases": true
						}
					},
					"type": 					"string",
					"regex": 					"/([^;]+)/g",
					"info": {
						"requirement": 	"Conditional (required if a viral reference database is provided)",
						"description":	"Tool used to compare ORFs with database, along with version and cutoffs used",
						"syntax":				"{software};{version};{parameters}",
						"example": 			"HMMER3; 3.1b2; hmmsearch, cutoff of 50 on score",
						"specificity":	"Comparable to and adapted from MIMAG / MISAG"
					}
				},
				"taxonomic-classification": {
					"value":					"vConTACT vContact2 (references from NCBI RefSeq v83, genus rank classification, default parameters)",
					"required":				"conditional",
					"type": 					"string",
					"info": {
						"requirement": 	"Conditional (required if a taxonomic classification is provided)",
						"description":	"Method used for taxonomic classification, along with reference database used, classification rank, and thresholds used to classify new genomes",
						"syntax":				"{text}",
						"example": 			"e.g. vConTACT vContact2 (references from NCBI RefSeq v83, genus rank classification, default parameters)",
						"specificity":	"Comparable to and adapted from MIMAG / MISAG"
					}
				},
				"votu-classification-approach": {
					"value":					"95% ANI;85% AF; greedy incremental clustering",
					"required":				"conditional",
					"conditional": 	{
						"annotation": {
							"has-votu-classification": true
						}
					},
					"type": 					"string",
					"regex": 					"/([^;]+)/g",
					"info": {
						"requirement": 	"Conditional (required if a vOTU classification is provided)",
						"description":	"Cutoffs and approach used when clustering new UViGs in “species-level” vOTUs. Note that results from standard 95% ANI / 85% AF clustering should be provided alongside vOTUS defined from another set of thresholds, even if the latter are the ones primarily used during the analysis.",
						"syntax":				"{ANI cutoff};{AF cutoff};{clustering method}",
						"example": 			"95% ANI;85% AF; greedy incremental clustering",
						"specificity":	"New and specific to UViGs"
					}
				},
				"votu-sequence-comparison-approach": {
					"value":					"blastn; 2.6.0+; e-value cutoff: 0.001",
					"required":				"conditional",
					"conditional": 	{
						"annotation": {
							"has-votu-classification": true
						}
					},
					"type": 					"string",
					"regex": 					"/([^;]+)/g",
					"info": {
						"requirement": 	"Conditional (required if a vOTU classification is provided)",
						"description":	"Tool and thresholds used to compare sequences when computing \"species-level\" vOTUs.",
						"syntax":				"{software};{version};{parameters}",
						"example": 			"blastn; 2.6.0+; e-value cutoff: 0.001",
						"specificity":	"New and specific to UViGs"
					}
				},
				"votu-database": {
					"value":					"NCBI Viral RefSeq; 83",
					"required":				"conditional",
					"conditional": 	{
						"annotation": {
							"has-votu-classification": true
						}
					},
					"type": 					"string",
					"regex": 					"/([^;]+)/g",
					"info": {
						"requirement": 	"Conditional (required if a vOTU classification is provided)",
						"description":	"Reference database (i.e. sequences not generated as part of the current study) used to cluster new genomes in \"species-level\" vOTUs, if any",
						"syntax":				"{database}:{version}",
						"example": 			"NCBI Viral RefSeq; 83",
						"specificity":	"New and specific to UViGs"
					}
				},
				"host-prediction-approach": {
					"value":					"NCBI Viral RefSeq; 83",
					"required":				"conditional",
					"conditional": 	{
						"annotation": {
							"has-predicted-host": true
						}
					},
					"type": 					"string",
					"regex": 					"/([^;]+)/g",
					"info": {
						"requirement": 	"Conditional (required if a predicted host is provided)",
						"description":	"Tool or approach used for host prediction",
						"syntax":				"[ provirus | host sequence similarity | CRISPR spacer match | kmer similarity | co-occurrence | combination | other ]",
						"example": 			"CRISPR spacer match",
						"specificity":	"New and specific to UViGs"
					}
				},
				"host-prediction-estimated-accuracy": {}
			}
		},
		"viral": {
			"sag-metadata": {
				"sorting-technology": {},
				"single-cell-or-viral-particle-lysis-approach": {},
				"single-cell-or-viral-particle-lysis-kit-protocol": {},
				"wga-amplification-approach": {},
				"wga-amplification-kit": {}
			},
			"mag-metadata": {
				"size-fraction-selected": {},
				"virus-enrichment-approach ": {},
				"nucleic-acid-extraction": {},
				"wga-amplification-approach ": {},
				"binning-parameters": {},
				"binning-software": {},
				"reassembly-post-binning": {},
				"mag-coverage-software": {}
			}
		}

	}

}


