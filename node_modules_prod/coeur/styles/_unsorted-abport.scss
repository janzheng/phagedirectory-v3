





._form-control {
  &.__float {
    // floating form labels (no descriptions)
    position: relative;
    ._form-label {
      cursor: text;
      position: absolute;
      padding-left: $size +2px;
      padding-bottom: 0; // fixes a click bug
      z-index: 1;
      width: 100%;  // these take care of a weird focus bug
      // height: 120%;
      pointer-events: none;
      color: usetheme(disabled-text);
      &, p { // sometimes markdown generates a p
        line-height: $size-6;
        top: 0;
        @extend %ease-fast;
        font-weight: 600;
      }
    }
    ._form-input, .vs__dropdown-toggle {
      position: relative;
      // line-height: $size-3;
      height: $size-6;
      // padding-top: $size-2;

      @include input-placeholder {
        color: transparent;
      }
    }
      .v-select {
        &.__empty:not(.vs--open) .vs__dropdown-toggle {
          // collapsed state for dropdown
          padding-top: 0;
        }
        // select open
        &.vs--open, &.vs--searching, &.__data {
          .vs__dropdown-toggle {
            height: $size-8;
            // line-height: $size-10;
            // padding-bottom: $size-half;
            @include input-placeholder {
              color: usetheme(silver);
            }
          }

          .vs__selected-options {
            // margin-top: $size-half;
            padding-top: $size-2;
            .vs__search {
              padding-top: 0;
            }
          }

          // dealing with v-select inconsistency
          &.__empty .vs__selected-options {
            padding-top: $size-half;
            .vs__search {
              padding-top: $size;
            }
          }

          & + ._form-label {
            &, p {
              color: usetheme(disabled-text);
              font-size: usetheme(font-small);
              // line-height: $size;
              line-height: 0; 
              padding-top: $size-half;
              @extend %ease-fast;
              width: 100%;  // these take care of a weird focus bug
              // height: 0%;
            }
          }
        }

      }

    // shrunken / open
    ._form-input:focus, 
    ._form-input:focus-within,
    ._form-input:active,
    ._form-input.__data,
    ._form-input.__open, {
      height: $size-8;
      // line-height: $size-10;
      // padding-bottom: $size-half;
      // padding-top: $size-half;
      padding-top: $size;
      @include input-placeholder {
        color: usetheme(silver);
      }

      & + ._form-label {
        &, p {
          color: usetheme(disabled-text);
          font-size: usetheme(font-small);
          line-height: $size;
          padding-top: $size-half;
          @extend %ease-fast;
          width: 100%;  // these take care of a weird focus bug
          // height: 0%;
        }
      }
    }


    textarea._form-input  {
      padding-top: $size-6;
      height: inherit !important;
    }
  }

  // .Formlet-textarea {
  //   ._form-input {
  //     min-height: $size-10;
  //   }
  //   &.__float {
  //     ._form-label {
  //       &, p {
  //         padding-top: $size-half;
  //         color: usetheme(mono-30);
  //         font-size: usetheme(font-small);
  //         line-height: usetheme(lineheight-small);
  //         // line-height: $size;
  //       }
  //     }
  //   }
  // }
}


._form-wrapper {
  position: relative;
}


._form-short ._form-control {
  margin: 0px;
  margin-bottom: 16px;
}













._button.__blueberry {
  $_size: 24px; // rem sometimes makes it look janky
  $_text-height: 21px; // calc(6px + 100%); 
  // NOT REUSABLE
  // this depends on the font!

  font-weight: bold;

  background-color: transparent !important;
  border-color: transparent !important;
  padding-left: 12px + $_size;

  position: relative;
  &:before {
    content: '+';
    position: absolute;
    // left: $_size / 2; // want flush left w/ other interface items
    left: 0;
    top: calc(50% - #{$_size} / 2);
    width: $_size;
    height: $_size;
    line-height: $_text-height;
    color: usetheme(purewhite);
    background: usetheme(brand-80);
    border-radius: 100%;
  }

  &:hover, &:active, &:focus {
    background-color: inherit !important;
    border-color: transparent !important;
    color: usetheme(brand-bright);

    &:before {
      background-color: usetheme(brand-bright);
    }
  }
  &.__disabled {
    cursor: default;
  }
}


._font-error {
  color: usetheme(error);
}


.Formlet-rating {
  .Formlet-rating-container {
    width: fit-content;
    // grid-template-columns: repeat(5, 2.5ch);
    display: grid;
    grid-template-rows: 1fr;
  }
  // .Formlet-rating-item {
  //   text-align: center;
  // }
  .Formlet-rating-star {
    font-size: $size-2;
    // padding-right: $size-half;
    cursor: pointer;
    // &.__active {
      color: usetheme(brand-bright);
    // }
  }
}












































































// h1 {
//   font-size: $font-h1;
//   line-height: $font-h1 * 1.2;
//   padding-bottom: $size-2x;
// }

// h2 {
//   // font-size: $size-2x;
//   line-height: $font-h2 * 1.2;
//   // padding-top:0;
//   // padding-bottom: 0;
// }

// h3 {
//   font-size: $size-2x;
//   line-height: $size-3;
//   // padding-top:0;
//   // padding-bottom: 0;
// }


// template / layout 
.ContentFrame {
  position: relative;

  // prevent scrolling the page when mobile nav is open
  &.__open {
    @include screen-xs {
      overflow: hidden;
      height: 100%;
      width: 100%;
      position: fixed;
    }
  }
}

blockquote {
  // border-left: $border-medium solid;
  border-color: usetheme(border-color); //$color-tertiary;
  padding-left: $size-2;
  padding-right: $size-2;

  &, p {
    font-size: $font-large;
    line-height: $font-large-lineheight * 1;
    @extend %font-serif;
    -webkit-font-smoothing: auto;
    -moz-osx-font-smoothing: unset;
    font-style: italic;
    color: usetheme(brand-copy);
    // @extend .__antialias;
  }
  cite, .source {
    @extend %font-sans;
    color: usetheme(copy); //$color-gray;
    font-size: $size;
    font-style: normal;
    color: usetheme(copy);
  }
}



%copy-large {
  font-size: usetheme(copy-large);
  line-height: usetheme(copy-large-lh);
  margin-bottom: $size-3;
}
.Copy-large {
  p, ul, li, table {
    @extend %copy-large;
  }
}

p, ul, li, {
  // font-size: $font-size-base;
  // line-height: $font-lineheight;
  @extend %md-sans_serif;

  padding-left: 0;
  // @extend %font-serif;

  a { // in-paragraph links
    // font-weight: 700;
    &+a {
    }
  }
}




































































































/* 

    Abstract Portal-specific code

 */


// title in the header
.Header-abstract {
  font-weight: bold !important;
  font-size: 1.15rem !important;
}


// special tags for sessions
%sessionTag {
  border: $border-thin solid usetheme(brand-bright);
  background-color: usetheme(white);
}

._tag.__session {
  @extend %sessionTag;
}

.__poster {
  text-transform: uppercase;
  font-size: $size--2;
  font-weight: bold;
}

// for forms and specfic stylings
.__session {

  .vs__selected {
    @extend %sessionTag;
    min-height: $size-2; // otherwise really long tags will wrap oddly
    height: fit-content; // if browser supports
  }
}


.Header {
  // .Header-noauth {
    // background: usetheme(silver-light);
    background: usetheme(brand-10);
  // }
}


// abstract submission form
.PortalForm {
  .PortalForm-controls-top { // nav bar at the top

    ._button.__active {
      // color: usetheme(active);
      color: usetheme(brand-bright); // less usable
      // text-decoration: underline
      span {
        padding-bottom: $size-quart;
        border-bottom: solid usetheme(brand-bright) $border-thin;
      }
    }
    ._button:focus {
      color: usetheme(active) !important;
    }
    ._button:hover {
      color: usetheme(active) !important;
    }

  }
  .PortalForm-controls-divider {
    border-color: usetheme(card);
  }

  .Form-intro {
    margin-bottom: $size-2x;
  }

  // not sure why there's so much spacing between label and input
  ._form-control {
    margin-bottom: $size-9;

    ._form-label p,
    ._form-desc p {
      // margin-bottom: $size-half;
      margin-bottom: $size-quart;
    }
  }


  .countrySelect {
    .vs__dropdown-menu {
      position: relative !important;
      // max-height: 90vh !important;
      max-height: inherit;
    }

    // .vs__selected-options {
    //   margin-top: $size-half;
    // }
    .vs__selected {
      padding: 0;
    }

    // .vs--open .vs__selected {
    //   padding-left: 2px;
    //   padding-top: 0px;
    // }
  }


  // make the forms clearer / more obvious

  // backgrounds:
  $portal-bg: usetheme(purewhite);
  $portal-default: usetheme(border-brand, $forms);
  $portal-focus: usetheme(brand-bright);

  input, textarea {
    background-color: $portal-bg;

    &:not(.vs__search) {
      border: solid $border-thin $portal-default; // more clear outlines

      &:focus, &:active, &:focus-within, &:hover {
        border-color: $portal-focus !important;
      }
    }
    &.vs__search {
      background-color: transparent;
    }
  }
  .v-select {
    background-color: $portal-bg;
  }

  .Tiptap {
    background-color: $portal-bg;

    &:focus-within {
      border-color: $portal-focus;
    }
    .Tiptap-editor.editor {
      max-width: 100%;
    }
  }

  // contnue button
  .__continue {
    &:hover, &:focus, &:active {
      border-color: usetheme(brand-bright) !important;
      background-color: usetheme(brand-bright) !important;
      color: usetheme(purewhite) !important;
    }
  }

  .__abstract-text-input {
    .ProseMirror {
      min-height: $size-12; // more focus area
    }
  }

  button._button.CTA:focus,
  button._button.CTA:hover, {
    // border-color: usetheme(brand-bright);
    // color: usetheme(brand-bright);
    border-color: usetheme(active); // easier to see
    color: usetheme(active);
  }

}




// Abstracts Item (preview) in the admin grid


.Abstracts-Item {
  .Abstracts-Item--title {

  }
  .Abstracts-Item--preview {
    max-height: 150px;
    overflow: scroll;
  }
  .Abstracts-Item--text {
    @extend ._font-small;
  }
}





















































/* 

  Submission Form

 */

._dragging {
  background-color: usetheme(brand-0) !important;
  border-top-color: usetheme(brand-5) !important;
  border-right-color: usetheme(brand-5) !important;
  border-bottom-color: usetheme(brand-5) !important;
  border-left-color: usetheme(brand-70) !important;
}
  ._ondrag {
    ._card {
      @extend ._dragging;
    }
  }

.AuthorForm-item {
  background-color: usetheme(bg);

  &:hover:not(.__active) {
    @extend ._dragging;
  }
}


// button controls
.PortalForm {
  ._button {
    white-space: nowrap;
  }

  .__bright {
    .vs--open .vs__dropdown-toggle {
      border: solid $border-thin usetheme(brand-bright);
      // border: solid $border-thin usetheme(border-bright);
    }
  }

  ._form-checkbox input:focus + span {
    border-color: usetheme(brand-bright);
  }
  ._form-checkbox input:checked + span {
    color: usetheme(brand-bright);
  }

  // for the tiptap entry box for title
  .__abstract-title {
    .editor__content {
      &,* { 
        font-size: $size-3; 
        line-height: $size-3 * 1.41;
      } 
    }
  }
}

// adding > markers between buttons
.PortalForm-controls-top {
  @include screen-xs {
    display: block;
  }

  ._button {
    line-height: $size-2;

    &:not(:last-child) {
      // @include screen-sm {
      position: relative;

      &:after {
        position: relative;
        padding-left: $size;
        content: ' > ';
        color: usetheme(disabled);
        text-decoration: none !important;
      };
      // }
    }

    @include screen-xs {
      display: block;
      padding: $size-half;
    }
  }
}



// special sessions radio label
.__checkmark {
  display: block;
  position: relative;

  // crazy sessions selector
  input { // hide the radio circles
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  .__boxy .checkmark {

    background: brown !important;
    &:before {
      border-radius: 4px !important;
    };
    &:after {
      // border-radius: 2px  !important;
      content:✓;
    };
  }


  .checkmark {
    margin-bottom: $size-quart;
    position: relative;
    $outerCheck: 18px;
    $innerCheck: 10px;

    &:before {
      content: '';
      position: absolute;
      width: $outerCheck;
      height: $outerCheck;
      // background: transparent;
      background-color: usetheme(silver-light);
      border: solid $border-thin transparent;
      border-radius: 100%;
      // top: 28px;
      top: calc(50% - #{$outerCheck}/2);
      @extend %ease;
    };
    &:after {
      content: '';
      position: absolute;
      width: $innerCheck;
      height: $innerCheck;
      // background: transparent;
      background-color: usetheme(purewhite);
      border-radius: 100px;
      top: calc(50% - #{$innerCheck}/2);
      left: $outerCheck + 1px;
      @extend %ease;
    };
  }

  .checkmark-content {
    line-height: initial
  }


  /* On mouse-over, add a grey background color */
  &:hover input ~ .checkmark {
    cursor: pointer;
    border-color: usetheme(brand-bright);
  }

  input:active ~ .checkmark,
  input:focus ~ .checkmark {
    cursor: pointer;
    border-color: usetheme(brand-bright);
    background-color: usetheme(brand-5);
  }
  /* When the radio button is checked, add a blue background */
  input:checked ~ .checkmark {
    border-color: usetheme(brand-bright);

    &:before {
      background: usetheme(brand-bright);
      @extend %ease;
    };
    &:after {
      background: usetheme(purewhite);
      @extend %ease;
    };
  }
}





// special sessions radio label
.__checkbox {
  display: block;
  position: relative;

  // crazy sessions selector
  input { // hide the radio circles
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  .checkbox {
    margin-bottom: $size-quart;
    position: relative;
    $outerCheck: 18px;
    $innerCheck: 10px;

    &:before {
      content: '';
      position: absolute;
      width: $outerCheck;
      height: $outerCheck;
      background-color: usetheme(silver-light);
      border: solid $border-thin transparent;
      border-radius: 4px !important;
      // top: 28px;
      top: calc(50% - #{$outerCheck}/2);
      @extend %ease;
    };
    &:after {
      content: '✓';
      position: absolute;
      width: $innerCheck;
      height: $innerCheck;

      background: transparent;
      color: usetheme(purewhite);

      background: transparent;
      // make checkmark look less checked
      // color: usetheme(purewhite);
      color: usetheme(silver-light);
      border-radius: 2px  !important;
      top: calc(50% - #{$innerCheck} - 1px);
      left: $outerCheck;
      font-weight: 600;
      @extend %ease;
    };
  }


  /* On mouse-over, add a grey background color */
  &:hover input ~ .checkbox {
    cursor: pointer;
    border-color: usetheme(brand-bright);
  }

  input:active ~ .checkbox,
  input:focus ~ .checkbox {
    cursor: pointer;
    border-color: usetheme(brand-bright);
    background-color: usetheme(brand-5);
  }
  /* When the radio button is checked, add a blue background */
  input:checked ~ .checkbox {
    border-color: usetheme(brand-bright);

    &:before {
      background: usetheme(brand-bright);
      @extend %ease;
    };
    &:after {
      // background: usetheme(purewhite);
      @extend %ease;
    };
  }
}




.RenderAbstract{
  margin-top: $size-6;
  
  .Abstract {
    &._card {
      box-shadow: usetheme(shadow-3, $shadows_);
    }
    &.__serif, .__serif {
      &, * {
        @extend %font-serif;
      }
    }
    &.__sans, .__sans { // sans trumps serifs
      &, * {  // explicit override, useful for headers, menu, etc.
        @extend %font-sans;
      }
    }
  }
}



.FooterSupport {
  a {
    font-weight: bold;
    text-decoration: underline;
    &:hover {
      color: usetheme(active);
    }
  }

}
